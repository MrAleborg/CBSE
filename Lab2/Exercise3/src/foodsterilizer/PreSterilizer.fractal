<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- START SNIPPET: Content -->
<!DOCTYPE definition PUBLIC "-//objectweb.org//DTD Fractal ADL 2.0//EN"
  "classpath://org/objectweb/fractal/cecilia/adl/parser/xml/cecilia.dtd">


<!-- ================================================================ -->
<!--                           Pre Sterilizer                         -->
<!-- ================================================================ -->

<definition name="foodsterilizer.PreSterilizer">
	
	<!-- Entry point of the component -->
	<interface name="pre" role="server" signature="boot.api.Main" />
	
	<!-- Required interfaces -->
	<interface name="rfp" role="client" signature="foodsterilizer.IRfP" />
	<interface name="c" role="client" signature="foodsterilizer.IClean" />
	<interface name="d_a" role="client" signature="foodsterilizer.IAlarm" />

	<!-- ======================================================= -->
	<!--                       Subcomponents                     -->
	<!-- ======================================================= -->
	
	<component name="monitor">
		
		<!-- Interfaces of the monitor component -->
		<interface name="r" role="server" signature="boot.api.Main" />
		<interface name="mon" role="server" signature="foodsterilizer.IMonitor" />
		<interface name="c" role="client" signature="foodsterilizer.IClean" />
		<interface name="rfp" role="client" signature="foodsterilizer.IRfP" />
		<interface name="sens" role="client" signature="foodsterilizer.ISensor" />
		<interface name="d_a" role="client" signature="foodsterilizer.IAlarm" />
		<!--<interface name="tim" role="client" signature="foodsterilizer.ITimer" />-->

		<!-- Implementation of the monitor component -->
		<content class="foodsterilizer.Monitor" hasConstructor="true"/>

	</component>

	<!-- We use external definitions of the 2 needed components -->
	<component name="sensor" definition="foodsterilizer.Sensor" />
	<!--<component name="timer" definition="foodsterilizer.Timer" />-->


	<!-- ===================================================== -->
	<!--                          Bindings                     -->
	<!-- ===================================================== -->

	<!-- bind entry point of the component with monitor component -->
	<binding client="this.pre" server="monitor.r" />

	<!-- bind monitor with sensor -->
	<binding client="monitor.sens" server="sensor.sens" />

	<!-- bind monitor with timer
	<binding client="monitor.tim" server="timer.tim" />-->

	<!-- bind clean signal -->
	<binding client="monitor.c" server="this.c" />

	<!-- bind rfp signal -->
	<binding client="monitor.rfp" server="this.rfp" />

	<!-- bind delay alam interface -->
	<binding client="monitor.d_a" server="this.d_a" />
</definition>
